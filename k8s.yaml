# Kubernetes manifest for TodoMVC application
# Includes Deployments and Services for both backend (Go API) and frontend (Vue + Nginx).
# Apply with: kubectl apply -f k8s.yaml
# Access locally with port-forwarding, e.g.:
#   kubectl port-forward svc/todo-backend 8080:8080
#   kubectl port-forward svc/todo-frontend 8081:80

---
apiVersion: v1
kind: Namespace
metadata:
  name: todo-app

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-backend
  namespace: todo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-backend
  template:
    metadata:
      labels:
        app: todo-backend
    spec:
      containers:
        - name: backend
          image: dev-registry:50890/todo-backend
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: "128Mi"
              cpu: "250m"
          env:
            - name: PORT
              value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: todo-backend
  namespace: todo-app
spec:
  type: ClusterIP
  selector:
    app: todo-backend
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: todo-frontend-config
  namespace: todo-app

data:
  nginx.conf: |
    server {
        listen       80;
        server_name  _;

        root   /usr/share/nginx/html;
        index  index.html;

        # Proxy API requests to backend service with URI rewrite
        location /api/ {
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://todo-backend.todo-app.svc.cluster.local:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve static files directly
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-frontend
  namespace: todo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-frontend
  template:
    metadata:
      labels:
        app: todo-frontend
    spec:
      containers:
        - name: frontend
          image: dev-registry:50890/todo-frontend
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
          resources:
            limits:
              memory: "64Mi"
              cpu: "100m"
      volumes:
        - name: nginx-config
          configMap:
            name: todo-frontend-config
---
apiVersion: v1
kind: Service
metadata:
  name: todo-frontend
  namespace: todo-app
spec:
  type: ClusterIP
  selector:
    app: todo-frontend
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
